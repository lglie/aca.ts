{
  "type": "object",
  "properties": {
    "orm": {
      "type": "string",
      "description": "orm file name(can be a folder name). If there are multiple, use an array representation"
    },
    "database": {
      "type": "object",
      "description": "Database related configuration, use (.) by default. If there are multiple databases, add them here",
      "properties": {
        "default": {
          "$ref": "#/$defs/database"
        }
      },
      "additionalProperties": {
        "$ref": "#/$defs/database"
      }
    },
    "serverApps": {
      "type": "object",
      "description": "Server-side app configuration, with the directory name of the app as the key",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "apiDir": {
            "type": "string",
            "description": "Store the automatically generated api directory name，by default as：src/aca.server"
          },
          "allowRPCClientApi": {
            "type": "boolean",
            "description": "Whether to allow the generation of front-end access api"
          }
        }
      }
    },
    "clientApps": {
      "type": "object",
      "description": "Client app configuration, with the directory name of the app as the key",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "apiDir": {
            "type": "string",
            "description": "Store the automatically generated api directory name，which defaults as；src/aca.client"
          },
          "allowRPCs": {
            "type": "array",
            "description": "Allow the app to access the backend RPC servers list"
          }
        }
      }
    }
  },
  "$defs": {
    "database": {
      "type": "object",
      "description": "Information about the configuration of the database, the database address supports the environment variables",
      "properties": {
        "tableNameWithNamespace": {
          "type": "boolean"
        },
        "onlyApi": {
          "type": "boolean"
        },
        "driver": {
          "type": "string",
          "enum": [
            "pg",
            "mysql",
            "BetterSqlite3"
          ]
        },
        "envConnection": {
          "type": [
            "string",
            "object"
          ]
        },
        "connection": {
          "type": [
            "string",
            "object"
          ]
        },
        "idDefaultType": {
          "type": "string",
          "description": "default type of id",
          "enum": [
            "cuid",
            "uuid",
            "autoincrement",
            "string",
            "int"
          ]
        },
        "foreignKeyConstraint": {
          "type": "boolean",
          "description": "Whether the database requires foreign key constraints"
        },
        "onUpdate": {
          "type": "string",
          "description": "The default action of foreign key when primary key is modified",
          "enum": [
            "cascade",
            "set null",
            "restrict",
            "no action"
          ]
        },
        "onDelete": {
          "type": "string",
          "description": "The default action of foreign key when primary key is deleted",
          "enum": [
            "cascade",
            "set null",
            "restrict",
            "no action"
          ]
        }
      }
    }
  }
}