
type DriverEnum = "pg" | "mssql" | "mysql2" | "sqlite3"
type OnPrimaryMutation = "cascade" | "set null" | "restrict" | "no action"

declare type $db = string
declare type int = number
declare type float = number
declare type id = {
  cuid: string
  uuid: string
  string: string
  int: number
  autoincrement: number
}

type dTable = (target: object) => void
type dColumn = (target: object, name?: string, descriptor?: object) => void

declare namespace $ {
  const map: (name: string) => dTable
  const id: (names?: string[]) => dTable
  const unique: (names?: string[]) => dTable
  const index: (names?: string[]) => dTable
  const check: (partten: string) => dTable
  const view: (sql: string) => dTable
  const distinct: dTable
  const select: (value: string) => dTable
  const deprecated: (suggest?: string) => dTable
}

declare namespace $_ {
  // map: (name: string) => dColumn,
  const dbType: (typeName: string) => dColumn
  const createdAt: dColumn
  const updatedAt: dColumn
  const unique: dColumn
  const index: dColumn
  const check: (partten: string) => dColumn
  const foreign: (
    args:
      | string
      | string[]
      | {
          keys: string | string[];
          references: string | string[];
          onUpdate?: OnPrimaryMutation;
          onDelete?: OnPrimaryMutation;
        }
  ) => dColumn
  const deprecated: (suggest?: string) => dColumn
}
