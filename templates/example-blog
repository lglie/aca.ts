// 该工具目前处于内测阶段，bug暂时提交：liaoguolie@gmail.com
// 注：所有的标识符不得以$开头，以防命名冲突
// 类成员支持的标量类型：id, int, bigint, float, string, object(键值对), Date，及自定义枚举类型
import {
  id,
  int,
  float,
  $db, // 数据库连接配置类型
  $, // 类装饰器,
  $_, // 成员装饰器
} from './.misc/.orm'

enum Gender {
  A,
  B,
  C,
}

// 数据库类
namespace Blog {
  // 每个数据库类只有一个const，并且类型为：$
  const dbConfig: $db = `default`

  @$.unique(['firstName', 'lastName'])
  class user {
    id: id
    @$_.dbType('varchar(16)') firstName: string
    @$_.dbType('varchar(25)') lastName: string
    gender = Gender.A
    age: int = 25
    bigint: bigint = BigInt('120')
    married: boolean = true
    description?: string
    detail?: object
    @$_.createdAt created_at?: Date
    @$_.updatedAt updated_at: Date
    profile?: profile
    posts: ns.post[]
    comments: comment[]
  }

  @$.map('PROF')
  class profile {
    @$_.dbType('varchar(8)') id: id
    @$_.dbType('char(8)') password: string
    @$_.foreign({
      keys: ['firstNameId', 'lastNameId'],
      references: ['firstName', 'lastName'],
      onUpdate: 'cascade',
      onDelete: 'cascade',
    })
    user: user
  }

  // 支持多级命名空间
  namespace ns {
    enum gtEnum {
      tk,
      fl,
    }

    export class post {
      serial: id['autoincrement']
      isPublished: boolean
      enum?: gtEnum
      score: float
      @$_.foreign({
        keys: ['firstNameId', 'lastNameId'],
        references: ['firstName', 'lastName'],
      })
      author: user
      comments: comment[]
      // @ts-ignore
      categories: category['posts'][]
    }

    export class category {
      id: id['string']
      @$_.unique @$_.index name: string
      //@ts-ignore
      posts: post['categories'][]
      @$_.foreign('categoriesId') parent?: category
      children: category[]
      comments: comment[]
    }
  }

  export class comment {
    id: id['cuid']
    topEnum = Gender.C
    content: string
    category: ns.category[]
    commenter: user[]
    @$_.foreign('postsId') post: ns.post
    createdAt: Date = new Date()
  }
}
